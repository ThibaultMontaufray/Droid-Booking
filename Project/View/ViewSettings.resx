<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxFlag.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>